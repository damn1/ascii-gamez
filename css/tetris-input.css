.tetris-input-container {
  width: 300px;
}

.tetris-input-container .row {
  margin: auto;
  margin-bottom: 3px;
  width: 100%;
}

.tetris-input-container div[class^="col-"] {
  padding-left: 6px;
  padding-right: 6px;
}

.tetris-input-container pre {
  margin-bottom: 0px;
}

.tetris-input-container #color-picker,
.tetris-input-container .tetris-input,
.tetris-input-container .tetris-command {
  color: ghostwhite;
  width: 36px;
  height: 30px;
  background-color: rgba(0,0,0,0);
  border: 1px solid ghostwhite;
  text-align: center;
}

#input-name { /* special length for this tetris-input */
  width: 72px;
}

.right {
  text-align: right;
}

pre.start {
  color: ghostwhite;
  padding-top: 7px;
}

input.tetris-command {
  margin-top: 11px;
}

/* CSS for commands during the match: there is an <input> element overlapped to
 * the 'start' command. We don't want this input to be visibile. */
.overlap-input-container {
  width: 100%;
  margin: auto;
  height: 30px;
  padding-left: 6px;
  padding-right: 6px;
  position: relative; /* for absolute child element */
  display: inline-block; /* to take the width of the input */
}

.input-container {
  text-align: left;
  width: 100%;
  height: 100%; /* added to match the height of the #click div */
  outline: 0; /* to remove outline when focused */
  z-index: 900;
}

.input-container:hover {
  border: 2px solid ghostwhite;
}

.input-container input {
  border: 1px solid ghostwhite;
  background: rgba(0,0,0,0);
  color: rgba(0,0,0,0);
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.label-container {
  text-align: center; /* centers the <pre> */
  position: absolute; /* to align it to right and positon it over the input */
  top: 0;
  right: 0;
  z-index: -2;
}